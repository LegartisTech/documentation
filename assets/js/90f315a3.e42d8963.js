"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[865],{3905:(o,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>k});var t=n(7294);function a(o,e,n){return e in o?Object.defineProperty(o,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):o[e]=n,o}function i(o,e){var n=Object.keys(o);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(o);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(o,e).enumerable}))),n.push.apply(n,t)}return n}function r(o){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){a(o,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(o,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(o,e,Object.getOwnPropertyDescriptor(n,e))}))}return o}function p(o,e){if(null==o)return{};var n,t,a=function(o,e){if(null==o)return{};var n,t,a={},i=Object.keys(o);for(t=0;t<i.length;t++)n=i[t],e.indexOf(n)>=0||(a[n]=o[n]);return a}(o,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(o);for(t=0;t<i.length;t++)n=i[t],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(o,n)&&(a[n]=o[n])}return a}var l=t.createContext({}),s=function(o){var e=t.useContext(l),n=e;return o&&(n="function"==typeof o?o(e):r(r({},e),o)),n},c=function(o){var e=s(o.components);return t.createElement(l.Provider,{value:e},o.children)},y="mdxType",u={inlineCode:"code",wrapper:function(o){var e=o.children;return t.createElement(t.Fragment,{},e)}},b=t.forwardRef((function(o,e){var n=o.components,a=o.mdxType,i=o.originalType,l=o.parentName,c=p(o,["components","mdxType","originalType","parentName"]),y=s(n),b=a,k=y["".concat(l,".").concat(b)]||y[b]||u[b]||i;return n?t.createElement(k,r(r({ref:e},c),{},{components:n})):t.createElement(k,r({ref:e},c))}));function k(o,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof o||a){var i=n.length,r=new Array(i);r[0]=b;var p={};for(var l in e)hasOwnProperty.call(e,l)&&(p[l]=e[l]);p.originalType=o,p[y]="string"==typeof o?o:a,r[1]=p;for(var s=2;s<i;s++)r[s]=n[s];return t.createElement.apply(null,r)}return t.createElement.apply(null,n)}b.displayName="MDXCreateElement"},8236:(o,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var t=n(7462),a=(n(7294),n(3905));const i={sidebar_position:3},r="Create playbook",p={unversionedId:"api/playbooks",id:"api/playbooks",title:"Create playbook",description:"Swagger API",source:"@site/docs/api/playbooks.md",sourceDirName:"api",slug:"/api/playbooks",permalink:"/documentation/docs/api/playbooks",draft:!1,editUrl:"https://github.com/LegartisTech/documentation/tree/main/documentation/docs/api/playbooks.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Api Specifications",permalink:"/documentation/docs/api/api_specifications"},next:{title:"Create data points",permalink:"/documentation/docs/api/prompts"}},l={},s=[{value:"Get list of playbook provisions filtered by a playbook",id:"get-list-of-playbook-provisions-filtered-by-a-playbook",level:2},{value:"Get list of all provisions",id:"get-list-of-all-provisions",level:2}],c={toc:s},y="wrapper";function u(o){let{components:e,...n}=o;return(0,a.kt)(y,(0,t.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"create-playbook"},"Create playbook"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://apidocs.legartis.ai/?urls.primaryName=v2%2Fontology#/playbook.playbook/create_playbook_v2"},"Swagger API")),(0,a.kt)("p",null,"A playbook is a collection of provision subscriptions that you want to analyze in a document. Typically, Legartis sets up an initial playbook for you."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'import os\nfrom ontology_openapi_sdk import ApiClient, Configuration, PlaybookApi, PlaybookCreateData, PlaybookLanguageData\n\n# Configure API client settings\nconfiguration = Configuration()\nconfiguration.host = os.environ["ONTOLOGY_SERVICE_HOST"]\nconfiguration.access_token = ... # see getting started section\n\n# Load existing playbooks\nplaybook_api = PlaybookApi(ApiClient(configuration))\nfor playbook in playbook_api.list_playbooks_v2().items:\n    print(playbook.id, playbook.name)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'import os\n\nfrom ontology_openapi_sdk import ApiClient, Configuration, PlaybookApi, PlaybookCreateData, PlaybookLanguageData\n\n# Configure API client settings\nconfiguration = Configuration()\nconfiguration.host = os.environ["ONTOLOGY_SERVICE_HOST"]\nconfiguration.access_token = ... # see getting started section\n\n# Create a playbook with specified languages and company details\nplaybook_api = PlaybookApi(ApiClient(configuration))\nplabyook = playbook_api.create_playbook_v2(\n    body=PlaybookCreateData(\n        languages=[\n            PlaybookLanguageData(\n                name="API Playbook",\n                code="de",\n                enabled=True,\n            ),\n            PlaybookLanguageData(\n                name="API Playbook",\n                code="en",\n                enabled=True,\n            ),\n        ],\n        company_id="{your authorized company id}",\n        contract_type_id="nda_mutual",\n    )\n)\n\nprint(plabyook.id)\n\n# Or load existing playbooks\nfor playbook in playbook_api.list_playbooks_v2().items:\n    print(playbook.id, playbook.name)\n')),(0,a.kt)("h2",{id:"get-list-of-playbook-provisions-filtered-by-a-playbook"},"Get list of playbook provisions filtered by a playbook"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"http://localhost:8095/?urls.primaryName=v2%2Fontology#/playbookprovision/list_playbook_provisions_v2"},"Swagger API")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"playbook_provision_api = PlaybookprovisionApi(ApiClient(configuration))\nfor playbook_provision in playbook_provision_api.list_playbook_provisions_v2(playbook_id=123):\n    print(playbook_provision.id, playbook_provision)\n")),(0,a.kt)("h2",{id:"get-list-of-all-provisions"},"Get list of all provisions"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"http://localhost:8095/?urls.primaryName=v2%2Fontology#/provision/list_provisions_v3"},"Swagger API")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"provision_api = ProvisionApi(ApiClient(configuration))\nfor provision in provision_api.list_provisions_v3(with_subscriptions=True).items:\n    print(provision.id, provision)\n")))}u.isMDXComponent=!0}}]);